<ResourceDictionary
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:theme="clr-namespace:Granular.Presentation.Generic">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Granular.Presentation.Generic;component/Styles/Colors.xaml"/>
        <ResourceDictionary Source="/Granular.Presentation.Generic;component/Styles/ButtonChrome.xaml"/>
        <ResourceDictionary Source="/Granular.Presentation.Generic;component/Styles/Focus.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <LinearGradientBrush x:Key="BackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStop Color="#FFFCFCFC" Offset="0"/>
            <GradientStop Color="#FFF8F8F8" Offset="1"/>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="BorderBrush" Color="#FFD3D3D3"/>

    <Style x:Key="ButtonBaseStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="FrameworkElement.MinHeight" Value="4" />
        <Setter Property="FrameworkElement.MinWidth" Value="4" />
        <Setter Property="Control.Padding" Value="2" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Control.BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource DefaultFocusVisualStyle}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <theme:ButtonChrome x:Name="buttonChrome"
                                            Background="{TemplateBinding Control.Background}"
                                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                                            RenderEnabled="{TemplateBinding UIElement.IsEnabled}"
                                            RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                                            RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
                                            RenderFocused="{TemplateBinding UIElement.IsFocused}"
                                            RenderCorners="{TemplateBinding theme:ButtonChrome.RenderCorners}"/>
                        <Decorator Margin="2">
                            <ContentPresenter Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"/>
                        </Decorator>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="buttonChrome" Property="theme:ButtonChrome.RenderPressed" Value="True"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBaseStyle}"/>
    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ButtonBaseStyle}"/>
    <Style TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource ButtonBaseStyle}"/>

</ResourceDictionary>