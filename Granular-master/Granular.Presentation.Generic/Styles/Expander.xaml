<ResourceDictionary
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:theme="clr-namespace:Granular.Presentation.Generic">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Granular.Presentation.Generic;component/Styles/Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="ExpandButtonChromeStyle" TargetType="{x:Type theme:ButtonChrome}">
        <Setter Property="Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type theme:ButtonChrome}">
                    <Grid Width="20" Height="20">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition To="Normal">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="backgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:0:0.3" To="0" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition To="MouseOver" From="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="backgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:0:0.1" From="1" To="0.5" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition To="MouseOver">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="backgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:0:0.3" To="0.5" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition To="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="backgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:0:0.1" To="1" />
                                        </Storyboard>
                                    </VisualTransition>
                                    <VisualTransition To="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="backgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0:0:0.1" To="0" />
                                        </Storyboard>
                                    </VisualTransition>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="backgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="backgroundOverlay" Storyboard.TargetProperty="(UIElement.Opacity)" Duration="0" To="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="background" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="9.5"/>

                        <Border x:Name="backgroundOverlay" Background="{StaticResource BackgroundOverlayBrush}" BorderBrush="{StaticResource BorderOverlayBrush}" BorderThickness="1" CornerRadius="9.5" Opacity="0"/>

                        <Border x:Name="innerBorder" BorderBrush="{StaticResource InnerBorderBrush}" BorderThickness="1" CornerRadius="8.5" Margin="1" Opacity="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="theme:ButtonChrome.RenderEnabled" Value="False">
                            <Setter TargetName="background" Property="Border.Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                            <Setter TargetName="background" Property="Border.BorderBrush" Value="{StaticResource DisabledBorderBrush}"/>
                            <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="0"/>
                            <Setter Property="Control.Foreground" Value="#FFADADAD"/>
                        </Trigger>
                        <Trigger Property="theme:ButtonChrome.RenderPressed" Value="True">
                            <Setter TargetName="innerBorder" Property="UIElement.Opacity" Value="0"/>
                        </Trigger>
                        <Trigger Property="theme:ButtonChrome.RenderFocused" Value="True">
                            <Setter TargetName="background" Property="Border.BorderBrush" Value="{StaticResource BorderFocusedBrush}"/>
                        </Trigger>
                        <Trigger Property="theme:ButtonChrome.RenderCorners" Value="False">
                            <Setter TargetName="background" Property="Border.CornerRadius" Value="0"/>
                            <Setter TargetName="backgroundOverlay" Property="Border.CornerRadius" Value="0"/>
                            <Setter TargetName="innerBorder" Property="Border.CornerRadius" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpandTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Control.FontFamily" Value=""/>
        <Setter Property="Control.FontSize" Value="16"/>
        <Setter Property="Control.FontStyle" Value="Normal"/>
        <Setter Property="Control.FontWeight" Value="Normal"/>
        <Setter Property="TextBlock.TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="ExpandButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="FrameworkElement.MinHeight" Value="24" />
        <Setter Property="FrameworkElement.MinWidth" Value="24" />
        <Setter Property="Control.Padding" Value="2" />
        <Setter Property="Control.HorizontalContentAlignment" Value="Center" />
        <Setter Property="Control.VerticalContentAlignment" Value="Center" />
        <Setter Property="Control.Background" Value="{StaticResource BackgroundBrush}"/>
        <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Control.BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="UIElement.Focusable" Value="False"/>
    </Style>

    <Style x:Key="ExpandDownButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ExpandButtonStyle}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel Background="Transparent">
                        <Grid DockPanel.Dock="Left" Margin="2">
                            <theme:ButtonChrome x:Name="buttonChrome" Style="{StaticResource ExpandButtonChromeStyle}"
                                                Background="{TemplateBinding Control.Background}"
                                                BorderBrush="{TemplateBinding Control.BorderBrush}"
                                                RenderEnabled="{TemplateBinding UIElement.IsEnabled}"
                                                RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                                                RenderPressed="{TemplateBinding ButtonBase.IsPressed}"/>
                            <TextBlock x:Name="textBlock" Style="{StaticResource ExpandTextBlockStyle}" Text="▾"/>
                        </Grid>
                        <ContentPresenter Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="textBlock" Property="TextBlock.Text" Value="▴"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpandUpButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ExpandButtonStyle}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel Background="Transparent">
                        <Grid DockPanel.Dock="Left" Margin="2">
                            <theme:ButtonChrome x:Name="buttonChrome" Style="{StaticResource ExpandButtonChromeStyle}"
                                                Background="{TemplateBinding Control.Background}"
                                                BorderBrush="{TemplateBinding Control.BorderBrush}"
                                                RenderEnabled="{TemplateBinding UIElement.IsEnabled}"
                                                RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                                                RenderPressed="{TemplateBinding ButtonBase.IsPressed}"/>
                            <TextBlock x:Name="textBlock" Style="{StaticResource ExpandTextBlockStyle}" Text="▴"/>
                        </Grid>
                        <ContentPresenter Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="textBlock" Property="TextBlock.Text" Value="▾"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpandLeftButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ExpandButtonStyle}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel Background="Transparent">
                        <Grid DockPanel.Dock="Top" Margin="2">
                            <theme:ButtonChrome x:Name="buttonChrome" Style="{StaticResource ExpandButtonChromeStyle}"
                                                Background="{TemplateBinding Control.Background}"
                                                BorderBrush="{TemplateBinding Control.BorderBrush}"
                                                RenderEnabled="{TemplateBinding UIElement.IsEnabled}"
                                                RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                                                RenderPressed="{TemplateBinding ButtonBase.IsPressed}"/>
                            <TextBlock x:Name="textBlock" Style="{StaticResource ExpandTextBlockStyle}" Text="◂"/>
                        </Grid>
                        <ContentPresenter Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="textBlock" Property="TextBlock.Text" Value="▸"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExpandRightButtonStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ExpandButtonStyle}">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <DockPanel Background="Transparent">
                        <Grid DockPanel.Dock="Top" Margin="2">
                            <theme:ButtonChrome x:Name="buttonChrome" Style="{StaticResource ExpandButtonChromeStyle}"
                                                Background="{TemplateBinding Control.Background}"
                                                BorderBrush="{TemplateBinding Control.BorderBrush}"
                                                RenderEnabled="{TemplateBinding UIElement.IsEnabled}"
                                                RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                                                RenderPressed="{TemplateBinding ButtonBase.IsPressed}"/>
                            <TextBlock x:Name="textBlock" Style="{StaticResource ExpandTextBlockStyle}" Text="▸"/>
                        </Grid>
                        <ContentPresenter Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"/>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ToggleButton.IsChecked" Value="True">
                            <Setter TargetName="textBlock" Property="TextBlock.Text" Value="◂"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush}"/>
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border CornerRadius="3"
                            Background="{TemplateBinding Control.Background}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}">
                        <DockPanel>
                            <ToggleButton x:Name="headerToggleButton" Margin="1" MinWidth="0" MinHeight="0" DockPanel.Dock="Top"
                                          Style="{StaticResource ExpandDownButtonStyle}"
                                          Content="{TemplateBinding HeaderedContentControl.Header}"
                                          ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                          ContentTemplateSelector="{TemplateBinding HeaderedContentControl.HeaderTemplateSelector}"
                                          HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                          IsChecked="{Binding (Expander.IsExpanded), RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=TwoWay}"/>
                            <ContentPresenter x:Name="contentPresenter" Visibility="Collapsed" Focusable="False"
                                              Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                              Content="{TemplateBinding ContentControl.Content}" ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Expander.ExpandDirection" Value="Up">
                            <Setter TargetName="headerToggleButton" Property="DockPanel.Dock" Value="Bottom"/>
                            <Setter TargetName="headerToggleButton" Property="FrameworkElement.Style" Value="{StaticResource ExpandUpButtonStyle}"/>
                        </Trigger>
                        <Trigger Property="Expander.ExpandDirection" Value="Left">
                            <Setter TargetName="headerToggleButton" Property="DockPanel.Dock" Value="Right"/>
                            <Setter TargetName="headerToggleButton" Property="FrameworkElement.Style" Value="{StaticResource ExpandLeftButtonStyle}"/>
                        </Trigger>
                        <Trigger Property="Expander.ExpandDirection" Value="Right">
                            <Setter TargetName="headerToggleButton" Property="DockPanel.Dock" Value="Left"/>
                            <Setter TargetName="headerToggleButton" Property="FrameworkElement.Style" Value="{StaticResource ExpandRightButtonStyle}"/>
                        </Trigger>
                        <Trigger Property="Expander.IsExpanded" Value="True">
                            <Setter TargetName="contentPresenter" Property="UIElement.Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="Control.Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>